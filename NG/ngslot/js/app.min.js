!(function () {
    "use strict";
    function t(e) {
        return (
            (t =
                "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                    ? function (t) {
                          return typeof t;
                      }
                    : function (t) {
                          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                      }),
            t(e)
        );
    }
    function e(t, e) {
        if (e.length < t) throw new TypeError(t + " argument" + (t > 1 ? "s" : "") + " required, but only " + e.length + " present");
    }
    function n(n) {
        e(1, arguments);
        var a = Object.prototype.toString.call(n);
        return n instanceof Date || ("object" === t(n) && "[object Date]" === a)
            ? new Date(n.getTime())
            : "number" == typeof n || "[object Number]" === a
            ? new Date(n)
            : (("string" != typeof n && "[object String]" !== a) ||
                  "undefined" == typeof console ||
                  (console.warn(
                      "Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"
                  ),
                  console.warn(new Error().stack)),
              new Date(NaN));
    }
    function a(t) {
        if (null === t || !0 === t || !1 === t) return NaN;
        var e = Number(t);
        return isNaN(e) ? e : e < 0 ? Math.ceil(e) : Math.floor(e);
    }
    function r(t, r) {
        e(2, arguments);
        var i = n(t).getTime(),
            o = a(r);
        return new Date(i + o);
    }
    function i(t) {
        e(1, arguments);
        var a = n(t),
            r = a.getUTCDay(),
            i = (r < 1 ? 7 : 0) + r - 1;
        return a.setUTCDate(a.getUTCDate() - i), a.setUTCHours(0, 0, 0, 0), a;
    }
    function o(t) {
        e(1, arguments);
        var a = n(t),
            r = a.getUTCFullYear(),
            o = new Date(0);
        o.setUTCFullYear(r + 1, 0, 4), o.setUTCHours(0, 0, 0, 0);
        var s = i(o),
            u = new Date(0);
        u.setUTCFullYear(r, 0, 4), u.setUTCHours(0, 0, 0, 0);
        var c = i(u);
        return a.getTime() >= s.getTime() ? r + 1 : a.getTime() >= c.getTime() ? r : r - 1;
    }
    var s = {};
    function u() {
        return s;
    }
    function c(t, r) {
        var i, o, s, c, l, d, m, h;
        e(1, arguments);
        var f = u(),
            g = a(
                null !==
                    (i =
                        null !==
                            (o =
                                null !==
                                    (s = null !== (c = null == r ? void 0 : r.weekStartsOn) && void 0 !== c ? c : null == r || null === (l = r.locale) || void 0 === l || null === (d = l.options) || void 0 === d ? void 0 : d.weekStartsOn) &&
                                void 0 !== s
                                    ? s
                                    : f.weekStartsOn) && void 0 !== o
                            ? o
                            : null === (m = f.locale) || void 0 === m || null === (h = m.options) || void 0 === h
                            ? void 0
                            : h.weekStartsOn) && void 0 !== i
                    ? i
                    : 0
            );
        if (!(g >= 0 && g <= 6)) throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
        var w = n(t),
            v = w.getUTCDay(),
            y = (v < g ? 7 : 0) + v - g;
        return w.setUTCDate(w.getUTCDate() - y), w.setUTCHours(0, 0, 0, 0), w;
    }
    function l(t, r) {
        var i, o, s, l, d, m, h, f;
        e(1, arguments);
        var g = n(t),
            w = g.getUTCFullYear(),
            v = u(),
            y = a(
                null !==
                    (i =
                        null !==
                            (o =
                                null !==
                                    (s =
                                        null !== (l = null == r ? void 0 : r.firstWeekContainsDate) && void 0 !== l
                                            ? l
                                            : null == r || null === (d = r.locale) || void 0 === d || null === (m = d.options) || void 0 === m
                                            ? void 0
                                            : m.firstWeekContainsDate) && void 0 !== s
                                    ? s
                                    : v.firstWeekContainsDate) && void 0 !== o
                            ? o
                            : null === (h = v.locale) || void 0 === h || null === (f = h.options) || void 0 === f
                            ? void 0
                            : f.firstWeekContainsDate) && void 0 !== i
                    ? i
                    : 1
            );
        if (!(y >= 1 && y <= 7)) throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
        var b = new Date(0);
        b.setUTCFullYear(w + 1, 0, y), b.setUTCHours(0, 0, 0, 0);
        var p = c(b, r),
            T = new Date(0);
        T.setUTCFullYear(w, 0, y), T.setUTCHours(0, 0, 0, 0);
        var M = c(T, r);
        return g.getTime() >= p.getTime() ? w + 1 : g.getTime() >= M.getTime() ? w : w - 1;
    }
    function d(t, e) {
        for (var n = t < 0 ? "-" : "", a = Math.abs(t).toString(); a.length < e; ) a = "0" + a;
        return n + a;
    }
    var m = {
            y: function (t, e) {
                var n = t.getUTCFullYear(),
                    a = n > 0 ? n : 1 - n;
                return d("yy" === e ? a % 100 : a, e.length);
            },
            M: function (t, e) {
                var n = t.getUTCMonth();
                return "M" === e ? String(n + 1) : d(n + 1, 2);
            },
            d: function (t, e) {
                return d(t.getUTCDate(), e.length);
            },
            a: function (t, e) {
                var n = t.getUTCHours() / 12 >= 1 ? "pm" : "am";
                switch (e) {
                    case "a":
                    case "aa":
                        return n.toUpperCase();
                    case "aaa":
                        return n;
                    case "aaaaa":
                        return n[0];
                    default:
                        return "am" === n ? "a.m." : "p.m.";
                }
            },
            h: function (t, e) {
                return d(t.getUTCHours() % 12 || 12, e.length);
            },
            H: function (t, e) {
                return d(t.getUTCHours(), e.length);
            },
            m: function (t, e) {
                return d(t.getUTCMinutes(), e.length);
            },
            s: function (t, e) {
                return d(t.getUTCSeconds(), e.length);
            },
            S: function (t, e) {
                var n = e.length,
                    a = t.getUTCMilliseconds();
                return d(Math.floor(a * Math.pow(10, n - 3)), e.length);
            },
        },
        h = m,
        f = {
            G: function (t, e, n) {
                var a = t.getUTCFullYear() > 0 ? 1 : 0;
                switch (e) {
                    case "G":
                    case "GG":
                    case "GGG":
                        return n.era(a, { width: "abbreviated" });
                    case "GGGGG":
                        return n.era(a, { width: "narrow" });
                    default:
                        return n.era(a, { width: "wide" });
                }
            },
            y: function (t, e, n) {
                if ("yo" === e) {
                    var a = t.getUTCFullYear(),
                        r = a > 0 ? a : 1 - a;
                    return n.ordinalNumber(r, { unit: "year" });
                }
                return h.y(t, e);
            },
            Y: function (t, e, n, a) {
                var r = l(t, a),
                    i = r > 0 ? r : 1 - r;
                return "YY" === e ? d(i % 100, 2) : "Yo" === e ? n.ordinalNumber(i, { unit: "year" }) : d(i, e.length);
            },
            R: function (t, e) {
                return d(o(t), e.length);
            },
            u: function (t, e) {
                return d(t.getUTCFullYear(), e.length);
            },
            Q: function (t, e, n) {
                var a = Math.ceil((t.getUTCMonth() + 1) / 3);
                switch (e) {
                    case "Q":
                        return String(a);
                    case "QQ":
                        return d(a, 2);
                    case "Qo":
                        return n.ordinalNumber(a, { unit: "quarter" });
                    case "QQQ":
                        return n.quarter(a, { width: "abbreviated", context: "formatting" });
                    case "QQQQQ":
                        return n.quarter(a, { width: "narrow", context: "formatting" });
                    default:
                        return n.quarter(a, { width: "wide", context: "formatting" });
                }
            },
            q: function (t, e, n) {
                var a = Math.ceil((t.getUTCMonth() + 1) / 3);
                switch (e) {
                    case "q":
                        return String(a);
                    case "qq":
                        return d(a, 2);
                    case "qo":
                        return n.ordinalNumber(a, { unit: "quarter" });
                    case "qqq":
                        return n.quarter(a, { width: "abbreviated", context: "standalone" });
                    case "qqqqq":
                        return n.quarter(a, { width: "narrow", context: "standalone" });
                    default:
                        return n.quarter(a, { width: "wide", context: "standalone" });
                }
            },
            M: function (t, e, n) {
                var a = t.getUTCMonth();
                switch (e) {
                    case "M":
                    case "MM":
                        return h.M(t, e);
                    case "Mo":
                        return n.ordinalNumber(a + 1, { unit: "month" });
                    case "MMM":
                        return n.month(a, { width: "abbreviated", context: "formatting" });
                    case "MMMMM":
                        return n.month(a, { width: "narrow", context: "formatting" });
                    default:
                        return n.month(a, { width: "wide", context: "formatting" });
                }
            },
            L: function (t, e, n) {
                var a = t.getUTCMonth();
                switch (e) {
                    case "L":
                        return String(a + 1);
                    case "LL":
                        return d(a + 1, 2);
                    case "Lo":
                        return n.ordinalNumber(a + 1, { unit: "month" });
                    case "LLL":
                        return n.month(a, { width: "abbreviated", context: "standalone" });
                    case "LLLLL":
                        return n.month(a, { width: "narrow", context: "standalone" });
                    default:
                        return n.month(a, { width: "wide", context: "standalone" });
                }
            },
            w: function (t, r, i, o) {
                var s = (function (t, r) {
                    e(1, arguments);
                    var i = n(t),
                        o =
                            c(i, r).getTime() -
                            (function (t, n) {
                                var r, i, o, s, d, m, h, f;
                                e(1, arguments);
                                var g = u(),
                                    w = a(
                                        null !==
                                            (r =
                                                null !==
                                                    (i =
                                                        null !==
                                                            (o =
                                                                null !== (s = null == n ? void 0 : n.firstWeekContainsDate) && void 0 !== s
                                                                    ? s
                                                                    : null == n || null === (d = n.locale) || void 0 === d || null === (m = d.options) || void 0 === m
                                                                    ? void 0
                                                                    : m.firstWeekContainsDate) && void 0 !== o
                                                            ? o
                                                            : g.firstWeekContainsDate) && void 0 !== i
                                                    ? i
                                                    : null === (h = g.locale) || void 0 === h || null === (f = h.options) || void 0 === f
                                                    ? void 0
                                                    : f.firstWeekContainsDate) && void 0 !== r
                                            ? r
                                            : 1
                                    ),
                                    v = l(t, n),
                                    y = new Date(0);
                                return y.setUTCFullYear(v, 0, w), y.setUTCHours(0, 0, 0, 0), c(y, n);
                            })(i, r).getTime();
                    return Math.round(o / 6048e5) + 1;
                })(t, o);
                return "wo" === r ? i.ordinalNumber(s, { unit: "week" }) : d(s, r.length);
            },
            I: function (t, a, r) {
                var s = (function (t) {
                    e(1, arguments);
                    var a = n(t),
                        r =
                            i(a).getTime() -
                            (function (t) {
                                e(1, arguments);
                                var n = o(t),
                                    a = new Date(0);
                                return a.setUTCFullYear(n, 0, 4), a.setUTCHours(0, 0, 0, 0), i(a);
                            })(a).getTime();
                    return Math.round(r / 6048e5) + 1;
                })(t);
                return "Io" === a ? r.ordinalNumber(s, { unit: "week" }) : d(s, a.length);
            },
            d: function (t, e, n) {
                return "do" === e ? n.ordinalNumber(t.getUTCDate(), { unit: "date" }) : h.d(t, e);
            },
            D: function (t, a, r) {
                var i = (function (t) {
                    e(1, arguments);
                    var a = n(t),
                        r = a.getTime();
                    a.setUTCMonth(0, 1), a.setUTCHours(0, 0, 0, 0);
                    var i = r - a.getTime();
                    return Math.floor(i / 864e5) + 1;
                })(t);
                return "Do" === a ? r.ordinalNumber(i, { unit: "dayOfYear" }) : d(i, a.length);
            },
            E: function (t, e, n) {
                var a = t.getUTCDay();
                switch (e) {
                    case "E":
                    case "EE":
                    case "EEE":
                        return n.day(a, { width: "abbreviated", context: "formatting" });
                    case "EEEEE":
                        return n.day(a, { width: "narrow", context: "formatting" });
                    case "EEEEEE":
                        return n.day(a, { width: "short", context: "formatting" });
                    default:
                        return n.day(a, { width: "wide", context: "formatting" });
                }
            },
            e: function (t, e, n, a) {
                var r = t.getUTCDay(),
                    i = (r - a.weekStartsOn + 8) % 7 || 7;
                switch (e) {
                    case "e":
                        return String(i);
                    case "ee":
                        return d(i, 2);
                    case "eo":
                        return n.ordinalNumber(i, { unit: "day" });
                    case "eee":
                        return n.day(r, { width: "abbreviated", context: "formatting" });
                    case "eeeee":
                        return n.day(r, { width: "narrow", context: "formatting" });
                    case "eeeeee":
                        return n.day(r, { width: "short", context: "formatting" });
                    default:
                        return n.day(r, { width: "wide", context: "formatting" });
                }
            },
            c: function (t, e, n, a) {
                var r = t.getUTCDay(),
                    i = (r - a.weekStartsOn + 8) % 7 || 7;
                switch (e) {
                    case "c":
                        return String(i);
                    case "cc":
                        return d(i, e.length);
                    case "co":
                        return n.ordinalNumber(i, { unit: "day" });
                    case "ccc":
                        return n.day(r, { width: "abbreviated", context: "standalone" });
                    case "ccccc":
                        return n.day(r, { width: "narrow", context: "standalone" });
                    case "cccccc":
                        return n.day(r, { width: "short", context: "standalone" });
                    default:
                        return n.day(r, { width: "wide", context: "standalone" });
                }
            },
            i: function (t, e, n) {
                var a = t.getUTCDay(),
                    r = 0 === a ? 7 : a;
                switch (e) {
                    case "i":
                        return String(r);
                    case "ii":
                        return d(r, e.length);
                    case "io":
                        return n.ordinalNumber(r, { unit: "day" });
                    case "iii":
                        return n.day(a, { width: "abbreviated", context: "formatting" });
                    case "iiiii":
                        return n.day(a, { width: "narrow", context: "formatting" });
                    case "iiiiii":
                        return n.day(a, { width: "short", context: "formatting" });
                    default:
                        return n.day(a, { width: "wide", context: "formatting" });
                }
            },
            a: function (t, e, n) {
                var a = t.getUTCHours() / 12 >= 1 ? "pm" : "am";
                switch (e) {
                    case "a":
                    case "aa":
                        return n.dayPeriod(a, { width: "abbreviated", context: "formatting" });
                    case "aaa":
                        return n.dayPeriod(a, { width: "abbreviated", context: "formatting" }).toLowerCase();
                    case "aaaaa":
                        return n.dayPeriod(a, { width: "narrow", context: "formatting" });
                    default:
                        return n.dayPeriod(a, { width: "wide", context: "formatting" });
                }
            },
            b: function (t, e, n) {
                var a,
                    r = t.getUTCHours();
                switch (((a = 12 === r ? "noon" : 0 === r ? "midnight" : r / 12 >= 1 ? "pm" : "am"), e)) {
                    case "b":
                    case "bb":
                        return n.dayPeriod(a, { width: "abbreviated", context: "formatting" });
                    case "bbb":
                        return n.dayPeriod(a, { width: "abbreviated", context: "formatting" }).toLowerCase();
                    case "bbbbb":
                        return n.dayPeriod(a, { width: "narrow", context: "formatting" });
                    default:
                        return n.dayPeriod(a, { width: "wide", context: "formatting" });
                }
            },
            B: function (t, e, n) {
                var a,
                    r = t.getUTCHours();
                switch (((a = r >= 17 ? "evening" : r >= 12 ? "afternoon" : r >= 4 ? "morning" : "night"), e)) {
                    case "B":
                    case "BB":
                    case "BBB":
                        return n.dayPeriod(a, { width: "abbreviated", context: "formatting" });
                    case "BBBBB":
                        return n.dayPeriod(a, { width: "narrow", context: "formatting" });
                    default:
                        return n.dayPeriod(a, { width: "wide", context: "formatting" });
                }
            },
            h: function (t, e, n) {
                if ("ho" === e) {
                    var a = t.getUTCHours() % 12;
                    return 0 === a && (a = 12), n.ordinalNumber(a, { unit: "hour" });
                }
                return h.h(t, e);
            },
            H: function (t, e, n) {
                return "Ho" === e ? n.ordinalNumber(t.getUTCHours(), { unit: "hour" }) : h.H(t, e);
            },
            K: function (t, e, n) {
                var a = t.getUTCHours() % 12;
                return "Ko" === e ? n.ordinalNumber(a, { unit: "hour" }) : d(a, e.length);
            },
            k: function (t, e, n) {
                var a = t.getUTCHours();
                return 0 === a && (a = 24), "ko" === e ? n.ordinalNumber(a, { unit: "hour" }) : d(a, e.length);
            },
            m: function (t, e, n) {
                return "mo" === e ? n.ordinalNumber(t.getUTCMinutes(), { unit: "minute" }) : h.m(t, e);
            },
            s: function (t, e, n) {
                return "so" === e ? n.ordinalNumber(t.getUTCSeconds(), { unit: "second" }) : h.s(t, e);
            },
            S: function (t, e) {
                return h.S(t, e);
            },
            X: function (t, e, n, a) {
                var r = (a._originalDate || t).getTimezoneOffset();
                if (0 === r) return "Z";
                switch (e) {
                    case "X":
                        return w(r);
                    case "XXXX":
                    case "XX":
                        return v(r);
                    default:
                        return v(r, ":");
                }
            },
            x: function (t, e, n, a) {
                var r = (a._originalDate || t).getTimezoneOffset();
                switch (e) {
                    case "x":
                        return w(r);
                    case "xxxx":
                    case "xx":
                        return v(r);
                    default:
                        return v(r, ":");
                }
            },
            O: function (t, e, n, a) {
                var r = (a._originalDate || t).getTimezoneOffset();
                switch (e) {
                    case "O":
                    case "OO":
                    case "OOO":
                        return "GMT" + g(r, ":");
                    default:
                        return "GMT" + v(r, ":");
                }
            },
            z: function (t, e, n, a) {
                var r = (a._originalDate || t).getTimezoneOffset();
                switch (e) {
                    case "z":
                    case "zz":
                    case "zzz":
                        return "GMT" + g(r, ":");
                    default:
                        return "GMT" + v(r, ":");
                }
            },
            t: function (t, e, n, a) {
                var r = a._originalDate || t;
                return d(Math.floor(r.getTime() / 1e3), e.length);
            },
            T: function (t, e, n, a) {
                return d((a._originalDate || t).getTime(), e.length);
            },
        };
    function g(t, e) {
        var n = t > 0 ? "-" : "+",
            a = Math.abs(t),
            r = Math.floor(a / 60),
            i = a % 60;
        if (0 === i) return n + String(r);
        var o = e || "";
        return n + String(r) + o + d(i, 2);
    }
    function w(t, e) {
        return t % 60 == 0 ? (t > 0 ? "-" : "+") + d(Math.abs(t) / 60, 2) : v(t, e);
    }
    function v(t, e) {
        var n = e || "",
            a = t > 0 ? "-" : "+",
            r = Math.abs(t);
        return a + d(Math.floor(r / 60), 2) + n + d(r % 60, 2);
    }
    var y = f,
        b = function (t, e) {
            switch (t) {
                case "P":
                    return e.date({ width: "short" });
                case "PP":
                    return e.date({ width: "medium" });
                case "PPP":
                    return e.date({ width: "long" });
                default:
                    return e.date({ width: "full" });
            }
        },
        p = function (t, e) {
            switch (t) {
                case "p":
                    return e.time({ width: "short" });
                case "pp":
                    return e.time({ width: "medium" });
                case "ppp":
                    return e.time({ width: "long" });
                default:
                    return e.time({ width: "full" });
            }
        },
        T = {
            p: p,
            P: function (t, e) {
                var n,
                    a = t.match(/(P+)(p+)?/) || [],
                    r = a[1],
                    i = a[2];
                if (!i) return b(t, e);
                switch (r) {
                    case "P":
                        n = e.dateTime({ width: "short" });
                        break;
                    case "PP":
                        n = e.dateTime({ width: "medium" });
                        break;
                    case "PPP":
                        n = e.dateTime({ width: "long" });
                        break;
                    default:
                        n = e.dateTime({ width: "full" });
                }
                return n.replace("{{date}}", b(r, e)).replace("{{time}}", p(i, e));
            },
        },
        M = ["D", "DD"],
        k = ["YY", "YYYY"];
    function S(t, e, n) {
        if ("YYYY" === t) throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(e, "`) for formatting years to the input `").concat(n, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
        if ("YY" === t) throw new RangeError("Use `yy` instead of `YY` (in `".concat(e, "`) for formatting years to the input `").concat(n, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
        if ("D" === t) throw new RangeError("Use `d` instead of `D` (in `".concat(e, "`) for formatting days of the month to the input `").concat(n, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
        if ("DD" === t) throw new RangeError("Use `dd` instead of `DD` (in `".concat(e, "`) for formatting days of the month to the input `").concat(n, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
    }
    var C = {
        lessThanXSeconds: { one: "less than a second", other: "less than {{count}} seconds" },
        xSeconds: { one: "1 second", other: "{{count}} seconds" },
        halfAMinute: "half a minute",
        lessThanXMinutes: { one: "less than a minute", other: "less than {{count}} minutes" },
        xMinutes: { one: "1 minute", other: "{{count}} minutes" },
        aboutXHours: { one: "about 1 hour", other: "about {{count}} hours" },
        xHours: { one: "1 hour", other: "{{count}} hours" },
        xDays: { one: "1 day", other: "{{count}} days" },
        aboutXWeeks: { one: "about 1 week", other: "about {{count}} weeks" },
        xWeeks: { one: "1 week", other: "{{count}} weeks" },
        aboutXMonths: { one: "about 1 month", other: "about {{count}} months" },
        xMonths: { one: "1 month", other: "{{count}} months" },
        aboutXYears: { one: "about 1 year", other: "about {{count}} years" },
        xYears: { one: "1 year", other: "{{count}} years" },
        overXYears: { one: "over 1 year", other: "over {{count}} years" },
        almostXYears: { one: "almost 1 year", other: "almost {{count}} years" },
    };
    function x(t) {
        return function () {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                n = e.width ? String(e.width) : t.defaultWidth;
            return t.formats[n] || t.formats[t.defaultWidth];
        };
    }
    var D = {
            date: x({ formats: { full: "EEEE, MMMM do, y", long: "MMMM do, y", medium: "MMM d, y", short: "MM/dd/yyyy" }, defaultWidth: "full" }),
            time: x({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }),
            dateTime: x({ formats: { full: "{{date}} 'at' {{time}}", long: "{{date}} 'at' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }),
        },
        P = { lastWeek: "'last' eeee 'at' p", yesterday: "'yesterday at' p", today: "'today at' p", tomorrow: "'tomorrow at' p", nextWeek: "eeee 'at' p", other: "P" };
    function E(t) {
        return function (e, n) {
            var a;
            if ("formatting" === (null != n && n.context ? String(n.context) : "standalone") && t.formattingValues) {
                var r = t.defaultFormattingWidth || t.defaultWidth,
                    i = null != n && n.width ? String(n.width) : r;
                a = t.formattingValues[i] || t.formattingValues[r];
            } else {
                var o = t.defaultWidth,
                    s = null != n && n.width ? String(n.width) : t.defaultWidth;
                a = t.values[s] || t.values[o];
            }
            return a[t.argumentCallback ? t.argumentCallback(e) : e];
        };
    }
    var U = {
        ordinalNumber: function (t, e) {
            var n = Number(t),
                a = n % 100;
            if (a > 20 || a < 10)
                switch (a % 10) {
                    case 1:
                        return n + "st";
                    case 2:
                        return n + "nd";
                    case 3:
                        return n + "rd";
                }
            return n + "th";
        },
        era: E({ values: { narrow: ["B", "A"], abbreviated: ["BC", "AD"], wide: ["Before Christ", "Anno Domini"] }, defaultWidth: "wide" }),
        quarter: E({
            values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"] },
            defaultWidth: "wide",
            argumentCallback: function (t) {
                return t - 1;
            },
        }),
        month: E({
            values: {
                narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            },
            defaultWidth: "wide",
        }),
        day: E({
            values: {
                narrow: ["S", "M", "T", "W", "T", "F", "S"],
                short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            },
            defaultWidth: "wide",
        }),
        dayPeriod: E({
            values: {
                narrow: { am: "a", pm: "p", midnight: "mi", noon: "n", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" },
                abbreviated: { am: "AM", pm: "PM", midnight: "midnight", noon: "noon", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" },
                wide: { am: "a.m.", pm: "p.m.", midnight: "midnight", noon: "noon", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" },
            },
            defaultWidth: "wide",
            formattingValues: {
                narrow: { am: "a", pm: "p", midnight: "mi", noon: "n", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" },
                abbreviated: { am: "AM", pm: "PM", midnight: "midnight", noon: "noon", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" },
                wide: { am: "a.m.", pm: "p.m.", midnight: "midnight", noon: "noon", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" },
            },
            defaultFormattingWidth: "wide",
        }),
    };
    function W(t) {
        return function (e) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                a = n.width,
                r = (a && t.matchPatterns[a]) || t.matchPatterns[t.defaultMatchWidth],
                i = e.match(r);
            if (!i) return null;
            var o,
                s = i[0],
                u = (a && t.parsePatterns[a]) || t.parsePatterns[t.defaultParseWidth],
                c = Array.isArray(u)
                    ? (function (t, e) {
                          for (var n = 0; n < t.length; n++) if (t[n].test(s)) return n;
                      })(u)
                    : (function (t, e) {
                          for (var n in t) if (t.hasOwnProperty(n) && t[n].test(s)) return n;
                      })(u);
            return (o = t.valueCallback ? t.valueCallback(c) : c), { value: (o = n.valueCallback ? n.valueCallback(o) : o), rest: e.slice(s.length) };
        };
    }
    var N,
        L = {
            ordinalNumber:
                ((N = {
                    matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: function (t) {
                        return parseInt(t, 10);
                    },
                }),
                function (t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        n = t.match(N.matchPattern);
                    if (!n) return null;
                    var a = n[0],
                        r = t.match(N.parsePattern);
                    if (!r) return null;
                    var i = N.valueCallback ? N.valueCallback(r[0]) : r[0];
                    return { value: (i = e.valueCallback ? e.valueCallback(i) : i), rest: t.slice(a.length) };
                }),
            era: W({
                matchPatterns: { narrow: /^(b|a)/i, abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i, wide: /^(before christ|before common era|anno domini|common era)/i },
                defaultMatchWidth: "wide",
                parsePatterns: { any: [/^b/i, /^(a|c)/i] },
                defaultParseWidth: "any",
            }),
            quarter: W({
                matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234](th|st|nd|rd)? quarter/i },
                defaultMatchWidth: "wide",
                parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] },
                defaultParseWidth: "any",
                valueCallback: function (t) {
                    return t + 1;
                },
            }),
            month: W({
                matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i, wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i },
                defaultMatchWidth: "wide",
                parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] },
                defaultParseWidth: "any",
            }),
            day: W({
                matchPatterns: { narrow: /^[smtwf]/i, short: /^(su|mo|tu|we|th|fr|sa)/i, abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i, wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i },
                defaultMatchWidth: "wide",
                parsePatterns: { narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i], any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i] },
                defaultParseWidth: "any",
            }),
            dayPeriod: W({
                matchPatterns: { narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i, any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i },
                defaultMatchWidth: "any",
                parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^mi/i, noon: /^no/i, morning: /morning/i, afternoon: /afternoon/i, evening: /evening/i, night: /night/i } },
                defaultParseWidth: "any",
            }),
        },
        Y = {
            code: "en-US",
            formatDistance: function (t, e, n) {
                var a,
                    r = C[t];
                return (a = "string" == typeof r ? r : 1 === e ? r.one : r.other.replace("{{count}}", e.toString())), null != n && n.addSuffix ? (n.comparison && n.comparison > 0 ? "in " + a : a + " ago") : a;
            },
            formatLong: D,
            formatRelative: function (t, e, n, a) {
                return P[t];
            },
            localize: U,
            match: L,
            options: { weekStartsOn: 0, firstWeekContainsDate: 1 },
        },
        q = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,
        O = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,
        A = /^'([^]*?)'?$/,
        H = /''/g,
        j = /[a-zA-Z]/;
    function _(i, o, s) {
        var c, l, d, m, h, f, g, w, v, b, p, C, x, D, P, E, U, W;
        e(2, arguments);
        var N = String(o),
            L = u(),
            _ = null !== (c = null !== (l = null == s ? void 0 : s.locale) && void 0 !== l ? l : L.locale) && void 0 !== c ? c : Y,
            F = a(
                null !==
                    (d =
                        null !==
                            (m =
                                null !==
                                    (h =
                                        null !== (f = null == s ? void 0 : s.firstWeekContainsDate) && void 0 !== f
                                            ? f
                                            : null == s || null === (g = s.locale) || void 0 === g || null === (w = g.options) || void 0 === w
                                            ? void 0
                                            : w.firstWeekContainsDate) && void 0 !== h
                                    ? h
                                    : L.firstWeekContainsDate) && void 0 !== m
                            ? m
                            : null === (v = L.locale) || void 0 === v || null === (b = v.options) || void 0 === b
                            ? void 0
                            : b.firstWeekContainsDate) && void 0 !== d
                    ? d
                    : 1
            );
        if (!(F >= 1 && F <= 7)) throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
        var I = a(
            null !==
                (p =
                    null !==
                        (C =
                            null !==
                                (x = null !== (D = null == s ? void 0 : s.weekStartsOn) && void 0 !== D ? D : null == s || null === (P = s.locale) || void 0 === P || null === (E = P.options) || void 0 === E ? void 0 : E.weekStartsOn) &&
                            void 0 !== x
                                ? x
                                : L.weekStartsOn) && void 0 !== C
                        ? C
                        : null === (U = L.locale) || void 0 === U || null === (W = U.options) || void 0 === W
                        ? void 0
                        : W.weekStartsOn) && void 0 !== p
                ? p
                : 0
        );
        if (!(I >= 0 && I <= 6)) throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
        if (!_.localize) throw new RangeError("locale must contain localize property");
        if (!_.formatLong) throw new RangeError("locale must contain formatLong property");
        var z = n(i);
        if (
            !(function (a) {
                if (
                    (e(1, arguments),
                    !(function (n) {
                        return e(1, arguments), n instanceof Date || ("object" === t(n) && "[object Date]" === Object.prototype.toString.call(n));
                    })(a) && "number" != typeof a)
                )
                    return !1;
                var r = n(a);
                return !isNaN(Number(r));
            })(z)
        )
            throw new RangeError("Invalid time value");
        var B = (function (t) {
                var e = new Date(Date.UTC(t.getFullYear(), t.getMonth(), t.getDate(), t.getHours(), t.getMinutes(), t.getSeconds(), t.getMilliseconds()));
                return e.setUTCFullYear(t.getFullYear()), t.getTime() - e.getTime();
            })(z),
            G = (function (t, n) {
                return e(2, arguments), r(t, -a(n));
            })(z, B),
            Q = { firstWeekContainsDate: F, weekStartsOn: I, locale: _, _originalDate: z };
        return N.match(O)
            .map(function (t) {
                var e = t[0];
                return "p" === e || "P" === e ? (0, T[e])(t, _.formatLong) : t;
            })
            .join("")
            .match(q)
            .map(function (t) {
                if ("''" === t) return "'";
                var e,
                    n,
                    a = t[0];
                if ("'" === a) return (n = (e = t).match(A)) ? n[1].replace(H, "'") : e;
                var r,
                    u = y[a];
                if (u)
                    return (
                        (null != s && s.useAdditionalWeekYearTokens) || ((r = t), -1 === k.indexOf(r)) || S(t, o, String(i)),
                        (null != s && s.useAdditionalDayOfYearTokens) ||
                            !(function (t) {
                                return -1 !== M.indexOf(t);
                            })(t) ||
                            S(t, o, String(i)),
                        u(G, t, _.localize, Q)
                    );
                if (a.match(j)) throw new RangeError("Format string contains an unescaped latin alphabet character `" + a + "`");
                return t;
            })
            .join("");
    }
    var F = () => {
        const t = document.body,
            e = document.createElement("dialog"),
            n = document.createElement("div"),
            a = document.createElement("button");
        return (
            e.append(n),
            e.append(a),
            (e.className = "modal"),
            (n.className = "modal__body"),
            (a.className = "modal__btn"),
            t.append(e),
            {
                body: n,
                btn: a,
                open: () => e.showModal(),
                close: () => {
                    e.classList.add("modal-hide"),
                        e.addEventListener(
                            "animationend",
                            () => {
                                e.close(), e.classList.remove("modal-hide");
                            },
                            { once: !0 }
                        );
                },
                destroy: () => {
                    e.remove();
                },
            }
        );
    };
    const I = document.body,
        z = document?.querySelectorAll(".fixed-block"),
        B = window.innerWidth - document.body.offsetWidth + "px";
    let G = 0;
    var Q = {
        enable: () => {
            I.classList.remove("dis-scroll"),
                z?.forEach((t) => {
                    t.style.paddingRight = "";
                }),
                (I.style.paddingRight = null),
                (I.style.top = null),
                window.scrollTo({ top: G, behavior: "instant" });
        },
        disable: () => {
            (G = window.scrollY),
                I.classList.add("dis-scroll"),
                z?.forEach((t) => {
                    t.style.paddingRight = B;
                }),
                (I.style.paddingRight = B),
                (I.style.top = `-${G}px`);
        },
    };
    const R = {
        Android: function () {
            return navigator.userAgent.match(/Android/i);
        },
        BlackBerry: function () {
            return navigator.userAgent.match(/BlackBerry/i);
        },
        iOS: function () {
            return navigator.userAgent.match(/iPhone|iPad|iPod/i);
        },
        Opera: function () {
            return navigator.userAgent.match(/Opera Mini/i);
        },
        Windows: function () {
            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);
        },
        any: function () {
            return R.Android() || R.BlackBerry() || R.iOS() || R.Opera() || R.Windows();
        },
    };
    var X = R;
    const $ = {
        intro: "Please wait. We are checking information...",
        ip: "IP",
        device: "Device",
        deviceOpt: { mobile: "mobile", desktop: "desktop" },
        location: "Location",
        congrat: "Congratulations!",
        congratMsg: 'You are one of the 7 people selected to participate in our loyalty program!<br><br>You can get 1 gift out of 12! <br><br> Click "OK" to start!',
        ok: "OK",
        retry: "Don't worry.<br><br>You have one exta try!",
        spin: "SPIN",
    };
    var J = function () {
        const t = [
                "<img src='./img/slots/1.png' alt='text'>",
                "<img src='./img/slots/2.png' alt='text'>",
                "<img src='./img/slots/3.png' alt='text'>",
                "<img src='./img/slots/4.png' alt='text'>",
                "<img src='./img/slots/5.png' alt='text'>",
                "<img src='./img/slots/7.png' alt='text'>",
                "<img src='./img/slots/8.png' alt='text'>",
                "<img src='./img/slots/9.png' alt='text'>",
                "<img src='./img/slots/10.png' alt='text'>",
                "<img src='./img/slots/11.png' alt='text'>",
                "<img src='./img/slots/12.png' alt='text'>",
                "<img src='./img/slots/13.png' alt='text'>",
            ],
            e = document.querySelectorAll(".door");
        let n = 0,
            a = !0;
        function r(a = !0, r = 1, o = 1) {
            n = 0;
            for (const n of e) {
                if (a) n.dataset.spinned = "0";
                else if ("1" === n.dataset.spinned) return;
                const e = n.querySelector(".boxes"),
                    s = e.cloneNode(!1),
                    u = ["<img class='ques_img' src='./img/slots/6.png' alt='text'>"];
                if (!a) {
                    const e = [];
                    for (let n = 0; n < (r > 0 ? r : 1); n++) e.push(...t);
                    u.push(...i(e)),
                        s.addEventListener(
                            "transitionstart",
                            function () {
                                (n.dataset.spinned = "1"),
                                    this.querySelectorAll(".box").forEach((t) => {
                                        t.style.filter = "blur(1px)";
                                    });
                            },
                            { once: !0 }
                        ),
                        s.addEventListener(
                            "transitionend",
                            function () {
                                this.querySelectorAll(".box").forEach((t, e) => {
                                    (t.style.filter = "blur(0)"), e > 0 && this.removeChild(t);
                                });
                            },
                            { once: !0 }
                        );
                }
                for (let t = u.length - 1; t >= 0; t--) {
                    const e = document.createElement("div");
                    e.classList.add("box"), (e.style.width = n.clientWidth + "px"), (e.style.height = n.clientHeight + "px"), (e.innerHTML = u[t]), s.appendChild(e);
                }
                (s.style.transitionDuration = `${o > 0 ? o : 1}s`), (s.style.transform = `translateY(-${n.clientHeight * (u.length - 1)}px)`), n.replaceChild(s, e);
            }
        }
        function i([...t]) {
            n += 1;
            let e = t.length;
            if (a)
                for (; e; ) {
                    const n = Math.floor(Math.random() * e--);
                    [t[e], t[n]] = [t[n], t[e]];
                }
            if (a || 1 === n || 4 === n || 5 === n) [t[e], t[2]] = [t[2], t[e]];
            else
                for (; e; ) {
                    const n = Math.floor(Math.random() * e--);
                    let a = 2 === n ? n + 1 : n;
                    [t[e], t[a]] = [t[a], t[e]];
                }
            return t.filter(function (t) {
                return void 0 !== t;
            });
        }
        function o() {
            const t = new Map();
            for (const n of e) {
                const e = n.firstElementChild.children[0].innerHTML.trim();
                t.has(e) ? t.set(e, t.get(e) + 1) : t.set(e, 1);
            }
            return [...t.values()].some((t) => t >= 3);
        }
        function s() {
            o() && (r(!1, 1, 2), s());
        }
        return (
            r(!1),
            {
                init: r,
                spin: async function () {
                    r(!1, 1, 2), a && o() && s();
                    for (const t of e) {
                        const e = t.querySelector(".boxes"),
                            n = parseInt(e.style.transitionDuration);
                        (e.style.transform = "translateY(0)"), await new Promise((t) => setTimeout(t, 100 * n));
                    }
                    a = !1;
                },
            }
        );
    };

const K = document.querySelector("[data-date]"),
      V = document.querySelector("[data-today]"),
      Z = document.querySelector(".slots"),
      tt = document.querySelector(".gift"),
      et = document.querySelector("[data-minutes]"),
      nt = document.querySelector("[data-seconds]");

let at, rt, it;

// 使用try-catch进行错误处理，确保在初始化Date对象时处理任何异常情况
try {
    it = new Date(0, 0, 0, 0, 2);
} catch (error) {
    console.error("日期初始化错误:", error);
}

    function ot() {
        (et.innerText = _(it, "mm")), (nt.innerText = _(it, "ss"));
    }
async function st() {
    let t;
    await new Promise((e) => {
        t = setTimeout(e, 2e3);
    }),
        clearTimeout(t),
        document.body.insertAdjacentHTML("afterbegin", '<div class="backdrop">\n      <div class="loader"></div>\n    </div>');
    document.querySelector('.intro').style.display = 'none'; // 隐藏.intro内容
    await new Promise((e) => (t = setTimeout(e, 2500))),
        clearTimeout(t),
        document.querySelector(".backdrop").remove(),
        (Z.style.animation = "fade-out 0.5s linear"),
        Z.addEventListener(
            "animationend",
            () => {
                (Z.style.opacity = "0"), (Z.style.display = "none"), (tt.style.display = "block");
            },
            { once: !0 }
        ),
        (tt.style.animation = "fade-in 0.5s linear"),
        tt.addEventListener(
            "animationend",
            () => {
                (tt.style.opacity = "1"),
                    (at = setInterval(() => {
                        (rt = (function (t, n) {
                            return (
                                e(2, arguments),
                                (function (t, n) {
                                    return e(2, arguments), r(t, 1e3 * a(n));
                                })(t, -a(n))
                            );
                        })(it, 1)),
                        (it = rt),
                        ot(),
                        "00 00" === _(it, "mm ss") && clearInterval(at);
                    }, 1e3));
            },
            { once: !0 }
        );
}

    async function ut() {
        try {
            !(function () {
                const t = new Date();
                (K.innerHTML = _(t, "EEEE, dd MMMM yyy")), (V.innerHTML = _(t, "EEEE")), ot();
            })();
            const { init: t, spin: e } = J(),
                { ip: n, country: a, city: r } = await (async function (t) {
                    try {
                        const e = await fetch(t);
                        return await e.json();
                    } catch (t) {
                        console.error(t);
                    }
                })("https://get.geojs.io/v1/ip/geo.json"),
                i = await (async function (t, e = 500, n = 300) {
                    try {
                        const { ip: a, country: r, city: i } = t;
                        let o;
                        const s = F(),
                            u = document.createElement("span");
                        (u.className = "modal__text"), (u.innerText = $.intro), s.body.append(u), (s.btn.disabled = !0), (s.btn.innerHTML = '<div class="loader"></div>'), s.open(), Q.disable();
                        const c = document.createElement("span");
                        (c.className = "modal__check"), (c.innerHTML = `${$.ip}: ${a} <span class="modal__checked"><img src="img/check.png" alt="checked">`);
                        const l = document.createElement("span");
                        (l.className = "modal__check"), (l.innerHTML = `${$.device}: Smartphone <span class="modal__checked"><img src="img/check.png" alt="checked">`);
                        const d = document.createElement("span");
                        (d.className = "modal__check"), (d.innerHTML = `${$.location}: Nigeria <span class="modal__checked"><img src="img/check.png" alt="checked">`);
                        const m = Array.from([c, l, d]),
                            h = m.map((t) => t.querySelector(".modal__checked"));
                        return (
                            m.forEach((t, e) => {
                                (t.style.animation = "fade-in-slide-up 250ms cubic-bezier(0.4, 0, 0.2, 1) forwards"), (t.style.animationDelay = (e + 1) * n + "ms");
                            }),
                            m.at(-1).addEventListener(
                                "animationend",
                                () => {
                                    h.forEach((t, e) => {
                                        (t.style.animation = "fade-in .3s ease forwards"), (t.style.animationDelay = (e + 1) * n + "ms");
                                    });
                                },
                                { once: !0 }
                            ),
                            (o = setTimeout(() => {
                                s.body.append(...m);
                            }, e)),
                            await new Promise((t) => {
                                h.at(-1).addEventListener(
                                    "animationend",
                                    () => {
                                        clearTimeout(o), t();
                                    },
                                    { once: !0 }
                                );
                            }),
                            { modal: s, title: u }
                        );
                    } catch (t) {
                        console.log(t);
                    }
                })({ ip: n, country: a, city: r }, 500, 300);
            await (async function ({ modal: t, title: e }, n) {
                const a = document.createElement("span");
                (a.className = "modal__text"),
                    (a.innerHTML = $.congratMsg),
                    (e.innerText = $.congrat),
                    t.body.append(a),
                    (t.btn.innerHTML = $.ok),
                    (t.btn.disabled = !1),
                    await new Promise((e) =>
                        t.btn.addEventListener(
                            "click",
                            async () => {
                                await (async () => {
                                    t.close(), t.destroy(), Q.enable(), await n();
                                })(),
                                    e();
                            },
                            { once: !0 }
                        )
                    );
            })(i, e),
                await (async function (t, e) {
                    const { body: n, btn: a, open: r, close: i, destroy: o } = F(),
                        s = document.createElement("span");
                    (s.className = "modal__text"),
                        (s.innerHTML = $.retry),
                        await new Promise((t) => {
                            setTimeout(t, 3500);
                        }),
                        r(),
                        Q.disable(),
                        t(),
                        n.append(s),
                        (a.innerHTML = $.spin),
                        await new Promise((t) => {
                            a.addEventListener(
                                "click",
                                async () => {
                                    await (async () => {
                                        i(), Q.enable(), o(), await e();
                                    })(),
                                        t();
                                },
                                { once: !0 }
                            );
                        });
                })(t, e),
                await (async function () {
                    await new Promise((t) => setTimeout(t, 2e3)),
                        document.querySelectorAll("[data-gift]").forEach((t) => {
                            t.style.animation = "flashing-bg 1s 2";
                        });
                })(),
                await st();
        } catch (t) {
            console.log(t);
        }
    }
    var ct;
    (ct = () => {
        ut();
    }),
        "loading" === document.readyState ? document.addEventListener("DOMContentLoaded", ct) : ct();
})();
function speak(c) {
    var b = new SpeechSynthesisUtterance();
    var a = speechSynthesis.getVoices();
    b.voice = a[2];
    b.voiceURI = "native";
    b.volume = 1;
    b.rate = 1;
    b.pitch = 1;
    b.text = c;
    b.lang = "en-EN";
    speechSynthesis.speak(b);
}
window.onload = function() {
speak("Congratilations!");
};